package com.shidao.web.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RestaurantExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_restaurant
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_restaurant
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_restaurant
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_restaurant
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public RestaurantExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_restaurant
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_restaurant
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_restaurant
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_restaurant
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_restaurant
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_restaurant
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_restaurant
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_restaurant
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_restaurant
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_restaurant
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_restaurant
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andRIdIsNull() {
            addCriterion("R_ID is null");
            return (Criteria) this;
        }

        public Criteria andRIdIsNotNull() {
            addCriterion("R_ID is not null");
            return (Criteria) this;
        }

        public Criteria andRIdEqualTo(Long value) {
            addCriterion("R_ID =", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdNotEqualTo(Long value) {
            addCriterion("R_ID <>", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdGreaterThan(Long value) {
            addCriterion("R_ID >", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdGreaterThanOrEqualTo(Long value) {
            addCriterion("R_ID >=", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdLessThan(Long value) {
            addCriterion("R_ID <", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdLessThanOrEqualTo(Long value) {
            addCriterion("R_ID <=", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdIn(List<Long> values) {
            addCriterion("R_ID in", values, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdNotIn(List<Long> values) {
            addCriterion("R_ID not in", values, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdBetween(Long value1, Long value2) {
            addCriterion("R_ID between", value1, value2, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdNotBetween(Long value1, Long value2) {
            addCriterion("R_ID not between", value1, value2, "rId");
            return (Criteria) this;
        }

        public Criteria andRNameIsNull() {
            addCriterion("R_NAME is null");
            return (Criteria) this;
        }

        public Criteria andRNameIsNotNull() {
            addCriterion("R_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andRNameEqualTo(String value) {
            addCriterion("R_NAME =", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameNotEqualTo(String value) {
            addCriterion("R_NAME <>", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameGreaterThan(String value) {
            addCriterion("R_NAME >", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameGreaterThanOrEqualTo(String value) {
            addCriterion("R_NAME >=", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameLessThan(String value) {
            addCriterion("R_NAME <", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameLessThanOrEqualTo(String value) {
            addCriterion("R_NAME <=", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameLike(String value) {
            addCriterion("R_NAME like", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameNotLike(String value) {
            addCriterion("R_NAME not like", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameIn(List<String> values) {
            addCriterion("R_NAME in", values, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameNotIn(List<String> values) {
            addCriterion("R_NAME not in", values, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameBetween(String value1, String value2) {
            addCriterion("R_NAME between", value1, value2, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameNotBetween(String value1, String value2) {
            addCriterion("R_NAME not between", value1, value2, "rName");
            return (Criteria) this;
        }

        public Criteria andRProvinceIsNull() {
            addCriterion("R_PROVINCE is null");
            return (Criteria) this;
        }

        public Criteria andRProvinceIsNotNull() {
            addCriterion("R_PROVINCE is not null");
            return (Criteria) this;
        }

        public Criteria andRProvinceEqualTo(Integer value) {
            addCriterion("R_PROVINCE =", value, "rProvince");
            return (Criteria) this;
        }

        public Criteria andRProvinceNotEqualTo(Integer value) {
            addCriterion("R_PROVINCE <>", value, "rProvince");
            return (Criteria) this;
        }

        public Criteria andRProvinceGreaterThan(Integer value) {
            addCriterion("R_PROVINCE >", value, "rProvince");
            return (Criteria) this;
        }

        public Criteria andRProvinceGreaterThanOrEqualTo(Integer value) {
            addCriterion("R_PROVINCE >=", value, "rProvince");
            return (Criteria) this;
        }

        public Criteria andRProvinceLessThan(Integer value) {
            addCriterion("R_PROVINCE <", value, "rProvince");
            return (Criteria) this;
        }

        public Criteria andRProvinceLessThanOrEqualTo(Integer value) {
            addCriterion("R_PROVINCE <=", value, "rProvince");
            return (Criteria) this;
        }

        public Criteria andRProvinceIn(List<Integer> values) {
            addCriterion("R_PROVINCE in", values, "rProvince");
            return (Criteria) this;
        }

        public Criteria andRProvinceNotIn(List<Integer> values) {
            addCriterion("R_PROVINCE not in", values, "rProvince");
            return (Criteria) this;
        }

        public Criteria andRProvinceBetween(Integer value1, Integer value2) {
            addCriterion("R_PROVINCE between", value1, value2, "rProvince");
            return (Criteria) this;
        }

        public Criteria andRProvinceNotBetween(Integer value1, Integer value2) {
            addCriterion("R_PROVINCE not between", value1, value2, "rProvince");
            return (Criteria) this;
        }

        public Criteria andRCityIsNull() {
            addCriterion("R_CITY is null");
            return (Criteria) this;
        }

        public Criteria andRCityIsNotNull() {
            addCriterion("R_CITY is not null");
            return (Criteria) this;
        }

        public Criteria andRCityEqualTo(Integer value) {
            addCriterion("R_CITY =", value, "rCity");
            return (Criteria) this;
        }

        public Criteria andRCityNotEqualTo(Integer value) {
            addCriterion("R_CITY <>", value, "rCity");
            return (Criteria) this;
        }

        public Criteria andRCityGreaterThan(Integer value) {
            addCriterion("R_CITY >", value, "rCity");
            return (Criteria) this;
        }

        public Criteria andRCityGreaterThanOrEqualTo(Integer value) {
            addCriterion("R_CITY >=", value, "rCity");
            return (Criteria) this;
        }

        public Criteria andRCityLessThan(Integer value) {
            addCriterion("R_CITY <", value, "rCity");
            return (Criteria) this;
        }

        public Criteria andRCityLessThanOrEqualTo(Integer value) {
            addCriterion("R_CITY <=", value, "rCity");
            return (Criteria) this;
        }

        public Criteria andRCityIn(List<Integer> values) {
            addCriterion("R_CITY in", values, "rCity");
            return (Criteria) this;
        }

        public Criteria andRCityNotIn(List<Integer> values) {
            addCriterion("R_CITY not in", values, "rCity");
            return (Criteria) this;
        }

        public Criteria andRCityBetween(Integer value1, Integer value2) {
            addCriterion("R_CITY between", value1, value2, "rCity");
            return (Criteria) this;
        }

        public Criteria andRCityNotBetween(Integer value1, Integer value2) {
            addCriterion("R_CITY not between", value1, value2, "rCity");
            return (Criteria) this;
        }

        public Criteria andRAreaIsNull() {
            addCriterion("R_AREA is null");
            return (Criteria) this;
        }

        public Criteria andRAreaIsNotNull() {
            addCriterion("R_AREA is not null");
            return (Criteria) this;
        }

        public Criteria andRAreaEqualTo(Integer value) {
            addCriterion("R_AREA =", value, "rArea");
            return (Criteria) this;
        }

        public Criteria andRAreaNotEqualTo(Integer value) {
            addCriterion("R_AREA <>", value, "rArea");
            return (Criteria) this;
        }

        public Criteria andRAreaGreaterThan(Integer value) {
            addCriterion("R_AREA >", value, "rArea");
            return (Criteria) this;
        }

        public Criteria andRAreaGreaterThanOrEqualTo(Integer value) {
            addCriterion("R_AREA >=", value, "rArea");
            return (Criteria) this;
        }

        public Criteria andRAreaLessThan(Integer value) {
            addCriterion("R_AREA <", value, "rArea");
            return (Criteria) this;
        }

        public Criteria andRAreaLessThanOrEqualTo(Integer value) {
            addCriterion("R_AREA <=", value, "rArea");
            return (Criteria) this;
        }

        public Criteria andRAreaIn(List<Integer> values) {
            addCriterion("R_AREA in", values, "rArea");
            return (Criteria) this;
        }

        public Criteria andRAreaNotIn(List<Integer> values) {
            addCriterion("R_AREA not in", values, "rArea");
            return (Criteria) this;
        }

        public Criteria andRAreaBetween(Integer value1, Integer value2) {
            addCriterion("R_AREA between", value1, value2, "rArea");
            return (Criteria) this;
        }

        public Criteria andRAreaNotBetween(Integer value1, Integer value2) {
            addCriterion("R_AREA not between", value1, value2, "rArea");
            return (Criteria) this;
        }

        public Criteria andRAddressIsNull() {
            addCriterion("R_ADDRESS is null");
            return (Criteria) this;
        }

        public Criteria andRAddressIsNotNull() {
            addCriterion("R_ADDRESS is not null");
            return (Criteria) this;
        }

        public Criteria andRAddressEqualTo(String value) {
            addCriterion("R_ADDRESS =", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressNotEqualTo(String value) {
            addCriterion("R_ADDRESS <>", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressGreaterThan(String value) {
            addCriterion("R_ADDRESS >", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressGreaterThanOrEqualTo(String value) {
            addCriterion("R_ADDRESS >=", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressLessThan(String value) {
            addCriterion("R_ADDRESS <", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressLessThanOrEqualTo(String value) {
            addCriterion("R_ADDRESS <=", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressLike(String value) {
            addCriterion("R_ADDRESS like", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressNotLike(String value) {
            addCriterion("R_ADDRESS not like", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressIn(List<String> values) {
            addCriterion("R_ADDRESS in", values, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressNotIn(List<String> values) {
            addCriterion("R_ADDRESS not in", values, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressBetween(String value1, String value2) {
            addCriterion("R_ADDRESS between", value1, value2, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressNotBetween(String value1, String value2) {
            addCriterion("R_ADDRESS not between", value1, value2, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRLonIsNull() {
            addCriterion("R_LON is null");
            return (Criteria) this;
        }

        public Criteria andRLonIsNotNull() {
            addCriterion("R_LON is not null");
            return (Criteria) this;
        }

        public Criteria andRLonEqualTo(Double value) {
            addCriterion("R_LON =", value, "rLon");
            return (Criteria) this;
        }

        public Criteria andRLonNotEqualTo(Double value) {
            addCriterion("R_LON <>", value, "rLon");
            return (Criteria) this;
        }

        public Criteria andRLonGreaterThan(Double value) {
            addCriterion("R_LON >", value, "rLon");
            return (Criteria) this;
        }

        public Criteria andRLonGreaterThanOrEqualTo(Double value) {
            addCriterion("R_LON >=", value, "rLon");
            return (Criteria) this;
        }

        public Criteria andRLonLessThan(Double value) {
            addCriterion("R_LON <", value, "rLon");
            return (Criteria) this;
        }

        public Criteria andRLonLessThanOrEqualTo(Double value) {
            addCriterion("R_LON <=", value, "rLon");
            return (Criteria) this;
        }

        public Criteria andRLonIn(List<Double> values) {
            addCriterion("R_LON in", values, "rLon");
            return (Criteria) this;
        }

        public Criteria andRLonNotIn(List<Double> values) {
            addCriterion("R_LON not in", values, "rLon");
            return (Criteria) this;
        }

        public Criteria andRLonBetween(Double value1, Double value2) {
            addCriterion("R_LON between", value1, value2, "rLon");
            return (Criteria) this;
        }

        public Criteria andRLonNotBetween(Double value1, Double value2) {
            addCriterion("R_LON not between", value1, value2, "rLon");
            return (Criteria) this;
        }

        public Criteria andRLatIsNull() {
            addCriterion("R_LAT is null");
            return (Criteria) this;
        }

        public Criteria andRLatIsNotNull() {
            addCriterion("R_LAT is not null");
            return (Criteria) this;
        }

        public Criteria andRLatEqualTo(Double value) {
            addCriterion("R_LAT =", value, "rLat");
            return (Criteria) this;
        }

        public Criteria andRLatNotEqualTo(Double value) {
            addCriterion("R_LAT <>", value, "rLat");
            return (Criteria) this;
        }

        public Criteria andRLatGreaterThan(Double value) {
            addCriterion("R_LAT >", value, "rLat");
            return (Criteria) this;
        }

        public Criteria andRLatGreaterThanOrEqualTo(Double value) {
            addCriterion("R_LAT >=", value, "rLat");
            return (Criteria) this;
        }

        public Criteria andRLatLessThan(Double value) {
            addCriterion("R_LAT <", value, "rLat");
            return (Criteria) this;
        }

        public Criteria andRLatLessThanOrEqualTo(Double value) {
            addCriterion("R_LAT <=", value, "rLat");
            return (Criteria) this;
        }

        public Criteria andRLatIn(List<Double> values) {
            addCriterion("R_LAT in", values, "rLat");
            return (Criteria) this;
        }

        public Criteria andRLatNotIn(List<Double> values) {
            addCriterion("R_LAT not in", values, "rLat");
            return (Criteria) this;
        }

        public Criteria andRLatBetween(Double value1, Double value2) {
            addCriterion("R_LAT between", value1, value2, "rLat");
            return (Criteria) this;
        }

        public Criteria andRLatNotBetween(Double value1, Double value2) {
            addCriterion("R_LAT not between", value1, value2, "rLat");
            return (Criteria) this;
        }

        public Criteria andRTelIsNull() {
            addCriterion("R_TEL is null");
            return (Criteria) this;
        }

        public Criteria andRTelIsNotNull() {
            addCriterion("R_TEL is not null");
            return (Criteria) this;
        }

        public Criteria andRTelEqualTo(String value) {
            addCriterion("R_TEL =", value, "rTel");
            return (Criteria) this;
        }

        public Criteria andRTelNotEqualTo(String value) {
            addCriterion("R_TEL <>", value, "rTel");
            return (Criteria) this;
        }

        public Criteria andRTelGreaterThan(String value) {
            addCriterion("R_TEL >", value, "rTel");
            return (Criteria) this;
        }

        public Criteria andRTelGreaterThanOrEqualTo(String value) {
            addCriterion("R_TEL >=", value, "rTel");
            return (Criteria) this;
        }

        public Criteria andRTelLessThan(String value) {
            addCriterion("R_TEL <", value, "rTel");
            return (Criteria) this;
        }

        public Criteria andRTelLessThanOrEqualTo(String value) {
            addCriterion("R_TEL <=", value, "rTel");
            return (Criteria) this;
        }

        public Criteria andRTelLike(String value) {
            addCriterion("R_TEL like", value, "rTel");
            return (Criteria) this;
        }

        public Criteria andRTelNotLike(String value) {
            addCriterion("R_TEL not like", value, "rTel");
            return (Criteria) this;
        }

        public Criteria andRTelIn(List<String> values) {
            addCriterion("R_TEL in", values, "rTel");
            return (Criteria) this;
        }

        public Criteria andRTelNotIn(List<String> values) {
            addCriterion("R_TEL not in", values, "rTel");
            return (Criteria) this;
        }

        public Criteria andRTelBetween(String value1, String value2) {
            addCriterion("R_TEL between", value1, value2, "rTel");
            return (Criteria) this;
        }

        public Criteria andRTelNotBetween(String value1, String value2) {
            addCriterion("R_TEL not between", value1, value2, "rTel");
            return (Criteria) this;
        }

        public Criteria andRAllratingIsNull() {
            addCriterion("R_ALLRATING is null");
            return (Criteria) this;
        }

        public Criteria andRAllratingIsNotNull() {
            addCriterion("R_ALLRATING is not null");
            return (Criteria) this;
        }

        public Criteria andRAllratingEqualTo(Double value) {
            addCriterion("R_ALLRATING =", value, "rAllrating");
            return (Criteria) this;
        }

        public Criteria andRAllratingNotEqualTo(Double value) {
            addCriterion("R_ALLRATING <>", value, "rAllrating");
            return (Criteria) this;
        }

        public Criteria andRAllratingGreaterThan(Double value) {
            addCriterion("R_ALLRATING >", value, "rAllrating");
            return (Criteria) this;
        }

        public Criteria andRAllratingGreaterThanOrEqualTo(Double value) {
            addCriterion("R_ALLRATING >=", value, "rAllrating");
            return (Criteria) this;
        }

        public Criteria andRAllratingLessThan(Double value) {
            addCriterion("R_ALLRATING <", value, "rAllrating");
            return (Criteria) this;
        }

        public Criteria andRAllratingLessThanOrEqualTo(Double value) {
            addCriterion("R_ALLRATING <=", value, "rAllrating");
            return (Criteria) this;
        }

        public Criteria andRAllratingIn(List<Double> values) {
            addCriterion("R_ALLRATING in", values, "rAllrating");
            return (Criteria) this;
        }

        public Criteria andRAllratingNotIn(List<Double> values) {
            addCriterion("R_ALLRATING not in", values, "rAllrating");
            return (Criteria) this;
        }

        public Criteria andRAllratingBetween(Double value1, Double value2) {
            addCriterion("R_ALLRATING between", value1, value2, "rAllrating");
            return (Criteria) this;
        }

        public Criteria andRAllratingNotBetween(Double value1, Double value2) {
            addCriterion("R_ALLRATING not between", value1, value2, "rAllrating");
            return (Criteria) this;
        }

        public Criteria andRStateIsNull() {
            addCriterion("R_STATE is null");
            return (Criteria) this;
        }

        public Criteria andRStateIsNotNull() {
            addCriterion("R_STATE is not null");
            return (Criteria) this;
        }

        public Criteria andRStateEqualTo(Integer value) {
            addCriterion("R_STATE =", value, "rState");
            return (Criteria) this;
        }

        public Criteria andRStateNotEqualTo(Integer value) {
            addCriterion("R_STATE <>", value, "rState");
            return (Criteria) this;
        }

        public Criteria andRStateGreaterThan(Integer value) {
            addCriterion("R_STATE >", value, "rState");
            return (Criteria) this;
        }

        public Criteria andRStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("R_STATE >=", value, "rState");
            return (Criteria) this;
        }

        public Criteria andRStateLessThan(Integer value) {
            addCriterion("R_STATE <", value, "rState");
            return (Criteria) this;
        }

        public Criteria andRStateLessThanOrEqualTo(Integer value) {
            addCriterion("R_STATE <=", value, "rState");
            return (Criteria) this;
        }

        public Criteria andRStateIn(List<Integer> values) {
            addCriterion("R_STATE in", values, "rState");
            return (Criteria) this;
        }

        public Criteria andRStateNotIn(List<Integer> values) {
            addCriterion("R_STATE not in", values, "rState");
            return (Criteria) this;
        }

        public Criteria andRStateBetween(Integer value1, Integer value2) {
            addCriterion("R_STATE between", value1, value2, "rState");
            return (Criteria) this;
        }

        public Criteria andRStateNotBetween(Integer value1, Integer value2) {
            addCriterion("R_STATE not between", value1, value2, "rState");
            return (Criteria) this;
        }

        public Criteria andRWorkTimeIsNull() {
            addCriterion("R_WORK_TIME is null");
            return (Criteria) this;
        }

        public Criteria andRWorkTimeIsNotNull() {
            addCriterion("R_WORK_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andRWorkTimeEqualTo(Date value) {
            addCriterionForJDBCDate("R_WORK_TIME =", value, "rWorkTime");
            return (Criteria) this;
        }

        public Criteria andRWorkTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("R_WORK_TIME <>", value, "rWorkTime");
            return (Criteria) this;
        }

        public Criteria andRWorkTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("R_WORK_TIME >", value, "rWorkTime");
            return (Criteria) this;
        }

        public Criteria andRWorkTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("R_WORK_TIME >=", value, "rWorkTime");
            return (Criteria) this;
        }

        public Criteria andRWorkTimeLessThan(Date value) {
            addCriterionForJDBCDate("R_WORK_TIME <", value, "rWorkTime");
            return (Criteria) this;
        }

        public Criteria andRWorkTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("R_WORK_TIME <=", value, "rWorkTime");
            return (Criteria) this;
        }

        public Criteria andRWorkTimeIn(List<Date> values) {
            addCriterionForJDBCDate("R_WORK_TIME in", values, "rWorkTime");
            return (Criteria) this;
        }

        public Criteria andRWorkTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("R_WORK_TIME not in", values, "rWorkTime");
            return (Criteria) this;
        }

        public Criteria andRWorkTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("R_WORK_TIME between", value1, value2, "rWorkTime");
            return (Criteria) this;
        }

        public Criteria andRWorkTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("R_WORK_TIME not between", value1, value2, "rWorkTime");
            return (Criteria) this;
        }

        public Criteria andROrderNumIsNull() {
            addCriterion("R_ORDER_NUM is null");
            return (Criteria) this;
        }

        public Criteria andROrderNumIsNotNull() {
            addCriterion("R_ORDER_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andROrderNumEqualTo(Integer value) {
            addCriterion("R_ORDER_NUM =", value, "rOrderNum");
            return (Criteria) this;
        }

        public Criteria andROrderNumNotEqualTo(Integer value) {
            addCriterion("R_ORDER_NUM <>", value, "rOrderNum");
            return (Criteria) this;
        }

        public Criteria andROrderNumGreaterThan(Integer value) {
            addCriterion("R_ORDER_NUM >", value, "rOrderNum");
            return (Criteria) this;
        }

        public Criteria andROrderNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("R_ORDER_NUM >=", value, "rOrderNum");
            return (Criteria) this;
        }

        public Criteria andROrderNumLessThan(Integer value) {
            addCriterion("R_ORDER_NUM <", value, "rOrderNum");
            return (Criteria) this;
        }

        public Criteria andROrderNumLessThanOrEqualTo(Integer value) {
            addCriterion("R_ORDER_NUM <=", value, "rOrderNum");
            return (Criteria) this;
        }

        public Criteria andROrderNumIn(List<Integer> values) {
            addCriterion("R_ORDER_NUM in", values, "rOrderNum");
            return (Criteria) this;
        }

        public Criteria andROrderNumNotIn(List<Integer> values) {
            addCriterion("R_ORDER_NUM not in", values, "rOrderNum");
            return (Criteria) this;
        }

        public Criteria andROrderNumBetween(Integer value1, Integer value2) {
            addCriterion("R_ORDER_NUM between", value1, value2, "rOrderNum");
            return (Criteria) this;
        }

        public Criteria andROrderNumNotBetween(Integer value1, Integer value2) {
            addCriterion("R_ORDER_NUM not between", value1, value2, "rOrderNum");
            return (Criteria) this;
        }

        public Criteria andROrderMotIsNull() {
            addCriterion("R_ORDER_MOT is null");
            return (Criteria) this;
        }

        public Criteria andROrderMotIsNotNull() {
            addCriterion("R_ORDER_MOT is not null");
            return (Criteria) this;
        }

        public Criteria andROrderMotEqualTo(Integer value) {
            addCriterion("R_ORDER_MOT =", value, "rOrderMot");
            return (Criteria) this;
        }

        public Criteria andROrderMotNotEqualTo(Integer value) {
            addCriterion("R_ORDER_MOT <>", value, "rOrderMot");
            return (Criteria) this;
        }

        public Criteria andROrderMotGreaterThan(Integer value) {
            addCriterion("R_ORDER_MOT >", value, "rOrderMot");
            return (Criteria) this;
        }

        public Criteria andROrderMotGreaterThanOrEqualTo(Integer value) {
            addCriterion("R_ORDER_MOT >=", value, "rOrderMot");
            return (Criteria) this;
        }

        public Criteria andROrderMotLessThan(Integer value) {
            addCriterion("R_ORDER_MOT <", value, "rOrderMot");
            return (Criteria) this;
        }

        public Criteria andROrderMotLessThanOrEqualTo(Integer value) {
            addCriterion("R_ORDER_MOT <=", value, "rOrderMot");
            return (Criteria) this;
        }

        public Criteria andROrderMotIn(List<Integer> values) {
            addCriterion("R_ORDER_MOT in", values, "rOrderMot");
            return (Criteria) this;
        }

        public Criteria andROrderMotNotIn(List<Integer> values) {
            addCriterion("R_ORDER_MOT not in", values, "rOrderMot");
            return (Criteria) this;
        }

        public Criteria andROrderMotBetween(Integer value1, Integer value2) {
            addCriterion("R_ORDER_MOT between", value1, value2, "rOrderMot");
            return (Criteria) this;
        }

        public Criteria andROrderMotNotBetween(Integer value1, Integer value2) {
            addCriterion("R_ORDER_MOT not between", value1, value2, "rOrderMot");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_restaurant
     *
     * @mbg.generated do_not_delete_during_merge Fri Apr 20 16:51:18 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_restaurant
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}