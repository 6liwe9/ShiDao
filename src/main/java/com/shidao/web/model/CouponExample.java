package com.shidao.web.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CouponExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_coupon
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_coupon
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_coupon
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_coupon
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public CouponExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_coupon
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_coupon
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_coupon
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_coupon
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_coupon
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_coupon
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_coupon
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_coupon
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_coupon
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_coupon
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_coupon
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCIdIsNull() {
            addCriterion("C_ID is null");
            return (Criteria) this;
        }

        public Criteria andCIdIsNotNull() {
            addCriterion("C_ID is not null");
            return (Criteria) this;
        }

        public Criteria andCIdEqualTo(Long value) {
            addCriterion("C_ID =", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdNotEqualTo(Long value) {
            addCriterion("C_ID <>", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdGreaterThan(Long value) {
            addCriterion("C_ID >", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdGreaterThanOrEqualTo(Long value) {
            addCriterion("C_ID >=", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdLessThan(Long value) {
            addCriterion("C_ID <", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdLessThanOrEqualTo(Long value) {
            addCriterion("C_ID <=", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdIn(List<Long> values) {
            addCriterion("C_ID in", values, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdNotIn(List<Long> values) {
            addCriterion("C_ID not in", values, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdBetween(Long value1, Long value2) {
            addCriterion("C_ID between", value1, value2, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdNotBetween(Long value1, Long value2) {
            addCriterion("C_ID not between", value1, value2, "cId");
            return (Criteria) this;
        }

        public Criteria andCCataIsNull() {
            addCriterion("C_CATA is null");
            return (Criteria) this;
        }

        public Criteria andCCataIsNotNull() {
            addCriterion("C_CATA is not null");
            return (Criteria) this;
        }

        public Criteria andCCataEqualTo(Integer value) {
            addCriterion("C_CATA =", value, "cCata");
            return (Criteria) this;
        }

        public Criteria andCCataNotEqualTo(Integer value) {
            addCriterion("C_CATA <>", value, "cCata");
            return (Criteria) this;
        }

        public Criteria andCCataGreaterThan(Integer value) {
            addCriterion("C_CATA >", value, "cCata");
            return (Criteria) this;
        }

        public Criteria andCCataGreaterThanOrEqualTo(Integer value) {
            addCriterion("C_CATA >=", value, "cCata");
            return (Criteria) this;
        }

        public Criteria andCCataLessThan(Integer value) {
            addCriterion("C_CATA <", value, "cCata");
            return (Criteria) this;
        }

        public Criteria andCCataLessThanOrEqualTo(Integer value) {
            addCriterion("C_CATA <=", value, "cCata");
            return (Criteria) this;
        }

        public Criteria andCCataIn(List<Integer> values) {
            addCriterion("C_CATA in", values, "cCata");
            return (Criteria) this;
        }

        public Criteria andCCataNotIn(List<Integer> values) {
            addCriterion("C_CATA not in", values, "cCata");
            return (Criteria) this;
        }

        public Criteria andCCataBetween(Integer value1, Integer value2) {
            addCriterion("C_CATA between", value1, value2, "cCata");
            return (Criteria) this;
        }

        public Criteria andCCataNotBetween(Integer value1, Integer value2) {
            addCriterion("C_CATA not between", value1, value2, "cCata");
            return (Criteria) this;
        }

        public Criteria andCTotalIsNull() {
            addCriterion("C_TOTAL is null");
            return (Criteria) this;
        }

        public Criteria andCTotalIsNotNull() {
            addCriterion("C_TOTAL is not null");
            return (Criteria) this;
        }

        public Criteria andCTotalEqualTo(Integer value) {
            addCriterion("C_TOTAL =", value, "cTotal");
            return (Criteria) this;
        }

        public Criteria andCTotalNotEqualTo(Integer value) {
            addCriterion("C_TOTAL <>", value, "cTotal");
            return (Criteria) this;
        }

        public Criteria andCTotalGreaterThan(Integer value) {
            addCriterion("C_TOTAL >", value, "cTotal");
            return (Criteria) this;
        }

        public Criteria andCTotalGreaterThanOrEqualTo(Integer value) {
            addCriterion("C_TOTAL >=", value, "cTotal");
            return (Criteria) this;
        }

        public Criteria andCTotalLessThan(Integer value) {
            addCriterion("C_TOTAL <", value, "cTotal");
            return (Criteria) this;
        }

        public Criteria andCTotalLessThanOrEqualTo(Integer value) {
            addCriterion("C_TOTAL <=", value, "cTotal");
            return (Criteria) this;
        }

        public Criteria andCTotalIn(List<Integer> values) {
            addCriterion("C_TOTAL in", values, "cTotal");
            return (Criteria) this;
        }

        public Criteria andCTotalNotIn(List<Integer> values) {
            addCriterion("C_TOTAL not in", values, "cTotal");
            return (Criteria) this;
        }

        public Criteria andCTotalBetween(Integer value1, Integer value2) {
            addCriterion("C_TOTAL between", value1, value2, "cTotal");
            return (Criteria) this;
        }

        public Criteria andCTotalNotBetween(Integer value1, Integer value2) {
            addCriterion("C_TOTAL not between", value1, value2, "cTotal");
            return (Criteria) this;
        }

        public Criteria andCSubIsNull() {
            addCriterion("C_SUB is null");
            return (Criteria) this;
        }

        public Criteria andCSubIsNotNull() {
            addCriterion("C_SUB is not null");
            return (Criteria) this;
        }

        public Criteria andCSubEqualTo(Integer value) {
            addCriterion("C_SUB =", value, "cSub");
            return (Criteria) this;
        }

        public Criteria andCSubNotEqualTo(Integer value) {
            addCriterion("C_SUB <>", value, "cSub");
            return (Criteria) this;
        }

        public Criteria andCSubGreaterThan(Integer value) {
            addCriterion("C_SUB >", value, "cSub");
            return (Criteria) this;
        }

        public Criteria andCSubGreaterThanOrEqualTo(Integer value) {
            addCriterion("C_SUB >=", value, "cSub");
            return (Criteria) this;
        }

        public Criteria andCSubLessThan(Integer value) {
            addCriterion("C_SUB <", value, "cSub");
            return (Criteria) this;
        }

        public Criteria andCSubLessThanOrEqualTo(Integer value) {
            addCriterion("C_SUB <=", value, "cSub");
            return (Criteria) this;
        }

        public Criteria andCSubIn(List<Integer> values) {
            addCriterion("C_SUB in", values, "cSub");
            return (Criteria) this;
        }

        public Criteria andCSubNotIn(List<Integer> values) {
            addCriterion("C_SUB not in", values, "cSub");
            return (Criteria) this;
        }

        public Criteria andCSubBetween(Integer value1, Integer value2) {
            addCriterion("C_SUB between", value1, value2, "cSub");
            return (Criteria) this;
        }

        public Criteria andCSubNotBetween(Integer value1, Integer value2) {
            addCriterion("C_SUB not between", value1, value2, "cSub");
            return (Criteria) this;
        }

        public Criteria andCDprIsNull() {
            addCriterion("C_DPR is null");
            return (Criteria) this;
        }

        public Criteria andCDprIsNotNull() {
            addCriterion("C_DPR is not null");
            return (Criteria) this;
        }

        public Criteria andCDprEqualTo(Double value) {
            addCriterion("C_DPR =", value, "cDpr");
            return (Criteria) this;
        }

        public Criteria andCDprNotEqualTo(Double value) {
            addCriterion("C_DPR <>", value, "cDpr");
            return (Criteria) this;
        }

        public Criteria andCDprGreaterThan(Double value) {
            addCriterion("C_DPR >", value, "cDpr");
            return (Criteria) this;
        }

        public Criteria andCDprGreaterThanOrEqualTo(Double value) {
            addCriterion("C_DPR >=", value, "cDpr");
            return (Criteria) this;
        }

        public Criteria andCDprLessThan(Double value) {
            addCriterion("C_DPR <", value, "cDpr");
            return (Criteria) this;
        }

        public Criteria andCDprLessThanOrEqualTo(Double value) {
            addCriterion("C_DPR <=", value, "cDpr");
            return (Criteria) this;
        }

        public Criteria andCDprIn(List<Double> values) {
            addCriterion("C_DPR in", values, "cDpr");
            return (Criteria) this;
        }

        public Criteria andCDprNotIn(List<Double> values) {
            addCriterion("C_DPR not in", values, "cDpr");
            return (Criteria) this;
        }

        public Criteria andCDprBetween(Double value1, Double value2) {
            addCriterion("C_DPR between", value1, value2, "cDpr");
            return (Criteria) this;
        }

        public Criteria andCDprNotBetween(Double value1, Double value2) {
            addCriterion("C_DPR not between", value1, value2, "cDpr");
            return (Criteria) this;
        }

        public Criteria andCNumIsNull() {
            addCriterion("C_NUM is null");
            return (Criteria) this;
        }

        public Criteria andCNumIsNotNull() {
            addCriterion("C_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andCNumEqualTo(Integer value) {
            addCriterion("C_NUM =", value, "cNum");
            return (Criteria) this;
        }

        public Criteria andCNumNotEqualTo(Integer value) {
            addCriterion("C_NUM <>", value, "cNum");
            return (Criteria) this;
        }

        public Criteria andCNumGreaterThan(Integer value) {
            addCriterion("C_NUM >", value, "cNum");
            return (Criteria) this;
        }

        public Criteria andCNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("C_NUM >=", value, "cNum");
            return (Criteria) this;
        }

        public Criteria andCNumLessThan(Integer value) {
            addCriterion("C_NUM <", value, "cNum");
            return (Criteria) this;
        }

        public Criteria andCNumLessThanOrEqualTo(Integer value) {
            addCriterion("C_NUM <=", value, "cNum");
            return (Criteria) this;
        }

        public Criteria andCNumIn(List<Integer> values) {
            addCriterion("C_NUM in", values, "cNum");
            return (Criteria) this;
        }

        public Criteria andCNumNotIn(List<Integer> values) {
            addCriterion("C_NUM not in", values, "cNum");
            return (Criteria) this;
        }

        public Criteria andCNumBetween(Integer value1, Integer value2) {
            addCriterion("C_NUM between", value1, value2, "cNum");
            return (Criteria) this;
        }

        public Criteria andCNumNotBetween(Integer value1, Integer value2) {
            addCriterion("C_NUM not between", value1, value2, "cNum");
            return (Criteria) this;
        }

        public Criteria andCStarttimeIsNull() {
            addCriterion("C_STARTTIME is null");
            return (Criteria) this;
        }

        public Criteria andCStarttimeIsNotNull() {
            addCriterion("C_STARTTIME is not null");
            return (Criteria) this;
        }

        public Criteria andCStarttimeEqualTo(Date value) {
            addCriterion("C_STARTTIME =", value, "cStarttime");
            return (Criteria) this;
        }

        public Criteria andCStarttimeNotEqualTo(Date value) {
            addCriterion("C_STARTTIME <>", value, "cStarttime");
            return (Criteria) this;
        }

        public Criteria andCStarttimeGreaterThan(Date value) {
            addCriterion("C_STARTTIME >", value, "cStarttime");
            return (Criteria) this;
        }

        public Criteria andCStarttimeGreaterThanOrEqualTo(Date value) {
            addCriterion("C_STARTTIME >=", value, "cStarttime");
            return (Criteria) this;
        }

        public Criteria andCStarttimeLessThan(Date value) {
            addCriterion("C_STARTTIME <", value, "cStarttime");
            return (Criteria) this;
        }

        public Criteria andCStarttimeLessThanOrEqualTo(Date value) {
            addCriterion("C_STARTTIME <=", value, "cStarttime");
            return (Criteria) this;
        }

        public Criteria andCStarttimeIn(List<Date> values) {
            addCriterion("C_STARTTIME in", values, "cStarttime");
            return (Criteria) this;
        }

        public Criteria andCStarttimeNotIn(List<Date> values) {
            addCriterion("C_STARTTIME not in", values, "cStarttime");
            return (Criteria) this;
        }

        public Criteria andCStarttimeBetween(Date value1, Date value2) {
            addCriterion("C_STARTTIME between", value1, value2, "cStarttime");
            return (Criteria) this;
        }

        public Criteria andCStarttimeNotBetween(Date value1, Date value2) {
            addCriterion("C_STARTTIME not between", value1, value2, "cStarttime");
            return (Criteria) this;
        }

        public Criteria andCEndtimeIsNull() {
            addCriterion("C_ENDTIME is null");
            return (Criteria) this;
        }

        public Criteria andCEndtimeIsNotNull() {
            addCriterion("C_ENDTIME is not null");
            return (Criteria) this;
        }

        public Criteria andCEndtimeEqualTo(Date value) {
            addCriterion("C_ENDTIME =", value, "cEndtime");
            return (Criteria) this;
        }

        public Criteria andCEndtimeNotEqualTo(Date value) {
            addCriterion("C_ENDTIME <>", value, "cEndtime");
            return (Criteria) this;
        }

        public Criteria andCEndtimeGreaterThan(Date value) {
            addCriterion("C_ENDTIME >", value, "cEndtime");
            return (Criteria) this;
        }

        public Criteria andCEndtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("C_ENDTIME >=", value, "cEndtime");
            return (Criteria) this;
        }

        public Criteria andCEndtimeLessThan(Date value) {
            addCriterion("C_ENDTIME <", value, "cEndtime");
            return (Criteria) this;
        }

        public Criteria andCEndtimeLessThanOrEqualTo(Date value) {
            addCriterion("C_ENDTIME <=", value, "cEndtime");
            return (Criteria) this;
        }

        public Criteria andCEndtimeIn(List<Date> values) {
            addCriterion("C_ENDTIME in", values, "cEndtime");
            return (Criteria) this;
        }

        public Criteria andCEndtimeNotIn(List<Date> values) {
            addCriterion("C_ENDTIME not in", values, "cEndtime");
            return (Criteria) this;
        }

        public Criteria andCEndtimeBetween(Date value1, Date value2) {
            addCriterion("C_ENDTIME between", value1, value2, "cEndtime");
            return (Criteria) this;
        }

        public Criteria andCEndtimeNotBetween(Date value1, Date value2) {
            addCriterion("C_ENDTIME not between", value1, value2, "cEndtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_coupon
     *
     * @mbg.generated do_not_delete_during_merge Fri Apr 20 16:51:18 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_coupon
     *
     * @mbg.generated Fri Apr 20 16:51:18 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}