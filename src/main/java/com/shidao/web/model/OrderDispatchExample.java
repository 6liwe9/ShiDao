package com.shidao.web.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class OrderDispatchExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_order_dispatch
     *
     * @mbg.generated Thu Mar 29 17:17:45 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_order_dispatch
     *
     * @mbg.generated Thu Mar 29 17:17:45 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_order_dispatch
     *
     * @mbg.generated Thu Mar 29 17:17:45 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_dispatch
     *
     * @mbg.generated Thu Mar 29 17:17:45 CST 2018
     */
    public OrderDispatchExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_dispatch
     *
     * @mbg.generated Thu Mar 29 17:17:45 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_dispatch
     *
     * @mbg.generated Thu Mar 29 17:17:45 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_dispatch
     *
     * @mbg.generated Thu Mar 29 17:17:45 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_dispatch
     *
     * @mbg.generated Thu Mar 29 17:17:45 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_dispatch
     *
     * @mbg.generated Thu Mar 29 17:17:45 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_dispatch
     *
     * @mbg.generated Thu Mar 29 17:17:45 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_dispatch
     *
     * @mbg.generated Thu Mar 29 17:17:45 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_dispatch
     *
     * @mbg.generated Thu Mar 29 17:17:45 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_dispatch
     *
     * @mbg.generated Thu Mar 29 17:17:45 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_dispatch
     *
     * @mbg.generated Thu Mar 29 17:17:45 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_order_dispatch
     *
     * @mbg.generated Thu Mar 29 17:17:45 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDIdIsNull() {
            addCriterion("D_ID is null");
            return (Criteria) this;
        }

        public Criteria andDIdIsNotNull() {
            addCriterion("D_ID is not null");
            return (Criteria) this;
        }

        public Criteria andDIdEqualTo(Long value) {
            addCriterion("D_ID =", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdNotEqualTo(Long value) {
            addCriterion("D_ID <>", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdGreaterThan(Long value) {
            addCriterion("D_ID >", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdGreaterThanOrEqualTo(Long value) {
            addCriterion("D_ID >=", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdLessThan(Long value) {
            addCriterion("D_ID <", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdLessThanOrEqualTo(Long value) {
            addCriterion("D_ID <=", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdIn(List<Long> values) {
            addCriterion("D_ID in", values, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdNotIn(List<Long> values) {
            addCriterion("D_ID not in", values, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdBetween(Long value1, Long value2) {
            addCriterion("D_ID between", value1, value2, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdNotBetween(Long value1, Long value2) {
            addCriterion("D_ID not between", value1, value2, "dId");
            return (Criteria) this;
        }

        public Criteria andOIdIsNull() {
            addCriterion("O_ID is null");
            return (Criteria) this;
        }

        public Criteria andOIdIsNotNull() {
            addCriterion("O_ID is not null");
            return (Criteria) this;
        }

        public Criteria andOIdEqualTo(Long value) {
            addCriterion("O_ID =", value, "oId");
            return (Criteria) this;
        }

        public Criteria andOIdNotEqualTo(Long value) {
            addCriterion("O_ID <>", value, "oId");
            return (Criteria) this;
        }

        public Criteria andOIdGreaterThan(Long value) {
            addCriterion("O_ID >", value, "oId");
            return (Criteria) this;
        }

        public Criteria andOIdGreaterThanOrEqualTo(Long value) {
            addCriterion("O_ID >=", value, "oId");
            return (Criteria) this;
        }

        public Criteria andOIdLessThan(Long value) {
            addCriterion("O_ID <", value, "oId");
            return (Criteria) this;
        }

        public Criteria andOIdLessThanOrEqualTo(Long value) {
            addCriterion("O_ID <=", value, "oId");
            return (Criteria) this;
        }

        public Criteria andOIdIn(List<Long> values) {
            addCriterion("O_ID in", values, "oId");
            return (Criteria) this;
        }

        public Criteria andOIdNotIn(List<Long> values) {
            addCriterion("O_ID not in", values, "oId");
            return (Criteria) this;
        }

        public Criteria andOIdBetween(Long value1, Long value2) {
            addCriterion("O_ID between", value1, value2, "oId");
            return (Criteria) this;
        }

        public Criteria andOIdNotBetween(Long value1, Long value2) {
            addCriterion("O_ID not between", value1, value2, "oId");
            return (Criteria) this;
        }

        public Criteria andEIdIsNull() {
            addCriterion("E_ID is null");
            return (Criteria) this;
        }

        public Criteria andEIdIsNotNull() {
            addCriterion("E_ID is not null");
            return (Criteria) this;
        }

        public Criteria andEIdEqualTo(Long value) {
            addCriterion("E_ID =", value, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdNotEqualTo(Long value) {
            addCriterion("E_ID <>", value, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdGreaterThan(Long value) {
            addCriterion("E_ID >", value, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdGreaterThanOrEqualTo(Long value) {
            addCriterion("E_ID >=", value, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdLessThan(Long value) {
            addCriterion("E_ID <", value, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdLessThanOrEqualTo(Long value) {
            addCriterion("E_ID <=", value, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdIn(List<Long> values) {
            addCriterion("E_ID in", values, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdNotIn(List<Long> values) {
            addCriterion("E_ID not in", values, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdBetween(Long value1, Long value2) {
            addCriterion("E_ID between", value1, value2, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdNotBetween(Long value1, Long value2) {
            addCriterion("E_ID not between", value1, value2, "eId");
            return (Criteria) this;
        }

        public Criteria andDLonIsNull() {
            addCriterion("D_LON is null");
            return (Criteria) this;
        }

        public Criteria andDLonIsNotNull() {
            addCriterion("D_LON is not null");
            return (Criteria) this;
        }

        public Criteria andDLonEqualTo(Double value) {
            addCriterion("D_LON =", value, "dLon");
            return (Criteria) this;
        }

        public Criteria andDLonNotEqualTo(Double value) {
            addCriterion("D_LON <>", value, "dLon");
            return (Criteria) this;
        }

        public Criteria andDLonGreaterThan(Double value) {
            addCriterion("D_LON >", value, "dLon");
            return (Criteria) this;
        }

        public Criteria andDLonGreaterThanOrEqualTo(Double value) {
            addCriterion("D_LON >=", value, "dLon");
            return (Criteria) this;
        }

        public Criteria andDLonLessThan(Double value) {
            addCriterion("D_LON <", value, "dLon");
            return (Criteria) this;
        }

        public Criteria andDLonLessThanOrEqualTo(Double value) {
            addCriterion("D_LON <=", value, "dLon");
            return (Criteria) this;
        }

        public Criteria andDLonIn(List<Double> values) {
            addCriterion("D_LON in", values, "dLon");
            return (Criteria) this;
        }

        public Criteria andDLonNotIn(List<Double> values) {
            addCriterion("D_LON not in", values, "dLon");
            return (Criteria) this;
        }

        public Criteria andDLonBetween(Double value1, Double value2) {
            addCriterion("D_LON between", value1, value2, "dLon");
            return (Criteria) this;
        }

        public Criteria andDLonNotBetween(Double value1, Double value2) {
            addCriterion("D_LON not between", value1, value2, "dLon");
            return (Criteria) this;
        }

        public Criteria andDLatIsNull() {
            addCriterion("D_LAT is null");
            return (Criteria) this;
        }

        public Criteria andDLatIsNotNull() {
            addCriterion("D_LAT is not null");
            return (Criteria) this;
        }

        public Criteria andDLatEqualTo(Double value) {
            addCriterion("D_LAT =", value, "dLat");
            return (Criteria) this;
        }

        public Criteria andDLatNotEqualTo(Double value) {
            addCriterion("D_LAT <>", value, "dLat");
            return (Criteria) this;
        }

        public Criteria andDLatGreaterThan(Double value) {
            addCriterion("D_LAT >", value, "dLat");
            return (Criteria) this;
        }

        public Criteria andDLatGreaterThanOrEqualTo(Double value) {
            addCriterion("D_LAT >=", value, "dLat");
            return (Criteria) this;
        }

        public Criteria andDLatLessThan(Double value) {
            addCriterion("D_LAT <", value, "dLat");
            return (Criteria) this;
        }

        public Criteria andDLatLessThanOrEqualTo(Double value) {
            addCriterion("D_LAT <=", value, "dLat");
            return (Criteria) this;
        }

        public Criteria andDLatIn(List<Double> values) {
            addCriterion("D_LAT in", values, "dLat");
            return (Criteria) this;
        }

        public Criteria andDLatNotIn(List<Double> values) {
            addCriterion("D_LAT not in", values, "dLat");
            return (Criteria) this;
        }

        public Criteria andDLatBetween(Double value1, Double value2) {
            addCriterion("D_LAT between", value1, value2, "dLat");
            return (Criteria) this;
        }

        public Criteria andDLatNotBetween(Double value1, Double value2) {
            addCriterion("D_LAT not between", value1, value2, "dLat");
            return (Criteria) this;
        }

        public Criteria andDStateIsNull() {
            addCriterion("D_STATE is null");
            return (Criteria) this;
        }

        public Criteria andDStateIsNotNull() {
            addCriterion("D_STATE is not null");
            return (Criteria) this;
        }

        public Criteria andDStateEqualTo(Integer value) {
            addCriterion("D_STATE =", value, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateNotEqualTo(Integer value) {
            addCriterion("D_STATE <>", value, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateGreaterThan(Integer value) {
            addCriterion("D_STATE >", value, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("D_STATE >=", value, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateLessThan(Integer value) {
            addCriterion("D_STATE <", value, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateLessThanOrEqualTo(Integer value) {
            addCriterion("D_STATE <=", value, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateIn(List<Integer> values) {
            addCriterion("D_STATE in", values, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateNotIn(List<Integer> values) {
            addCriterion("D_STATE not in", values, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateBetween(Integer value1, Integer value2) {
            addCriterion("D_STATE between", value1, value2, "dState");
            return (Criteria) this;
        }

        public Criteria andDStateNotBetween(Integer value1, Integer value2) {
            addCriterion("D_STATE not between", value1, value2, "dState");
            return (Criteria) this;
        }

        public Criteria andDPertimeIsNull() {
            addCriterion("D_PERTIME is null");
            return (Criteria) this;
        }

        public Criteria andDPertimeIsNotNull() {
            addCriterion("D_PERTIME is not null");
            return (Criteria) this;
        }

        public Criteria andDPertimeEqualTo(Date value) {
            addCriterion("D_PERTIME =", value, "dPertime");
            return (Criteria) this;
        }

        public Criteria andDPertimeNotEqualTo(Date value) {
            addCriterion("D_PERTIME <>", value, "dPertime");
            return (Criteria) this;
        }

        public Criteria andDPertimeGreaterThan(Date value) {
            addCriterion("D_PERTIME >", value, "dPertime");
            return (Criteria) this;
        }

        public Criteria andDPertimeGreaterThanOrEqualTo(Date value) {
            addCriterion("D_PERTIME >=", value, "dPertime");
            return (Criteria) this;
        }

        public Criteria andDPertimeLessThan(Date value) {
            addCriterion("D_PERTIME <", value, "dPertime");
            return (Criteria) this;
        }

        public Criteria andDPertimeLessThanOrEqualTo(Date value) {
            addCriterion("D_PERTIME <=", value, "dPertime");
            return (Criteria) this;
        }

        public Criteria andDPertimeIn(List<Date> values) {
            addCriterion("D_PERTIME in", values, "dPertime");
            return (Criteria) this;
        }

        public Criteria andDPertimeNotIn(List<Date> values) {
            addCriterion("D_PERTIME not in", values, "dPertime");
            return (Criteria) this;
        }

        public Criteria andDPertimeBetween(Date value1, Date value2) {
            addCriterion("D_PERTIME between", value1, value2, "dPertime");
            return (Criteria) this;
        }

        public Criteria andDPertimeNotBetween(Date value1, Date value2) {
            addCriterion("D_PERTIME not between", value1, value2, "dPertime");
            return (Criteria) this;
        }

        public Criteria andDTimeIsNull() {
            addCriterion("D_TIME is null");
            return (Criteria) this;
        }

        public Criteria andDTimeIsNotNull() {
            addCriterion("D_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andDTimeEqualTo(Date value) {
            addCriterion("D_TIME =", value, "dTime");
            return (Criteria) this;
        }

        public Criteria andDTimeNotEqualTo(Date value) {
            addCriterion("D_TIME <>", value, "dTime");
            return (Criteria) this;
        }

        public Criteria andDTimeGreaterThan(Date value) {
            addCriterion("D_TIME >", value, "dTime");
            return (Criteria) this;
        }

        public Criteria andDTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("D_TIME >=", value, "dTime");
            return (Criteria) this;
        }

        public Criteria andDTimeLessThan(Date value) {
            addCriterion("D_TIME <", value, "dTime");
            return (Criteria) this;
        }

        public Criteria andDTimeLessThanOrEqualTo(Date value) {
            addCriterion("D_TIME <=", value, "dTime");
            return (Criteria) this;
        }

        public Criteria andDTimeIn(List<Date> values) {
            addCriterion("D_TIME in", values, "dTime");
            return (Criteria) this;
        }

        public Criteria andDTimeNotIn(List<Date> values) {
            addCriterion("D_TIME not in", values, "dTime");
            return (Criteria) this;
        }

        public Criteria andDTimeBetween(Date value1, Date value2) {
            addCriterion("D_TIME between", value1, value2, "dTime");
            return (Criteria) this;
        }

        public Criteria andDTimeNotBetween(Date value1, Date value2) {
            addCriterion("D_TIME not between", value1, value2, "dTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_order_dispatch
     *
     * @mbg.generated do_not_delete_during_merge Thu Mar 29 17:17:45 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_order_dispatch
     *
     * @mbg.generated Thu Mar 29 17:17:45 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}